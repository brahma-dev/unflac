name: Build and Release Go Binary

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build (${{ matrix.goos }}-${{ matrix.goarch }})
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, windows, darwin]
        goarch: [amd64, arm64]

    outputs:
      artifact-names: ${{ steps.set-artifact.outputs.names }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.22'

      - name: Build binary
        run: |
          mkdir -p dist
          EXT=""
          if [ "${{ matrix.goos }}" = "windows" ]; then EXT=".exe"; fi
          OUT="unflac-${{ matrix.goos }}-${{ matrix.goarch }}$EXT"
          GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -o "dist/$OUT"

      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.goos }}-${{ matrix.goarch }}
          path: dist/

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Flatten artifact directory
        run: |
          mkdir final
          find dist -type f -exec mv {} final/ \;

      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: final/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  docker:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download amd64 binary
        uses: actions/download-artifact@v4
        with:
          name: build-linux-amd64
          path: dist/amd64

      - name: Download arm64 binary
        uses: actions/download-artifact@v4
        with:
          name: build-linux-arm64
          path: dist/arm64

      - name: Prepare amd64 binary
        run: mv dist/amd64/unflac-linux-amd64 ./unflac-amd64

      - name: Prepare arm64 binary
        run: mv dist/arm64/unflac-linux-arm64 ./unflac-arm64

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push multi-arch image
        uses: docker/build-push-action@v5
        with:
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/unflac:${{ github.ref_name }}
            ghcr.io/${{ github.repository }}/unflac:latest
          platforms: linux/amd64,linux/arm64
          file: Dockerfile
          context: .
          # Build args let you specify the binary to copy per arch
          build-args: |
            AMD64_BINARY=unflac-amd64
            ARM64_BINARY=unflac-arm64
